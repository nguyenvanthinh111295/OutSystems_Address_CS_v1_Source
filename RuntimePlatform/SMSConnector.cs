/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;

namespace OutSystems.HubEdition.RuntimePlatform.Sms {
/*	
		public enum SmsEncoding : int {
		Default7Bit=1,
		Data8Bit=2,
		Ucs2=3,
	}

	public enum SmsMessageClass : int {
		NoClass = 0,
		Alert = 1,
		Me = 2,
		Sim = 3,
		TE = 4,
	}
	[Serializable()]
	public class OutboundMessage {
		public string Text = null;
		public string From = null;
		public string To = null;
		public byte [] Udh = null;
		public byte [] UdhData = null;
		public SmsEncoding Encoding = SmsEncoding.Default7Bit;
		public SmsMessageClass Class = SmsMessageClass.NoClass;
		public DateTime LastTry = DateTime.Now;
		public int NbrRetries = 0;
		public int Pid = -1;
		public int NbrMesgs = 1;
		public string SmscId = "";
		public int CustomId = 0;
		public string ScreenName = "";
		public string TenantPath = "";
		public int TenantId;
		public int EspaceId;
		public string Description = "";
		public string BillingCode = "";
		public string Connection = "";
		public enum DeliveryReportType {
			Off,
			FailureOnly,
			On
		}
		public DeliveryReportType DeliveryReport = DeliveryReportType.Off;


		public OutboundMessage () {
		}

		public OutboundMessage (string from, string to, string text) {
			From = from;
			To = to;
			Text = text;
		}
	}
	[Serializable()]
	public class InboundMessage {
		public string Url = null;
		public int NbrRetries = 0;
		public DateTime LastTry = DateTime.Now;
		public bool IsReport = false;

		public InboundMessage () {
		}

		public InboundMessage (string url) {
			Url = url;
		}
	}
*/
}
