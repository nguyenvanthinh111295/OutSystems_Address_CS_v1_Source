/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;

namespace ssAddress_CS {
	public class Delivery: System.Web.UI.Page {
		private void Page_Load(object sender, System.EventArgs e) {
			HeContext heContext = Global.App.OsContext;
			if (!NetworkInterfaceUtils.IsLoopbackAddress(Request.UserHostAddress)) {
				ErrorLog.LogApplicationError("Access denied from " + Request.UserHostAddress,
				 "It is only possible to access the smshandler from 127.0.0.1", heContext, "SmsHandler");
				Response.StatusCode = 403;
				Response.Write("IP address " +Request.UserHostAddress + " is not allowed for this service");
				DatabaseAccess.FreeupResources(true);
				Response.End();
				return;
			}

			bool ok = false;
			try {
				string ssMSISDN= "";
				string ssLargeAccount= "";
				int ssCustomId=0;
				string ssScreen= "";
				string ssMessageId= "";
				string ssResult= "";
				int ssResultCode=0;
				string ssExtendedErrorCode= "";
				string ssConnection= "";
				string ssOperatorCode= "";
				string ssBillingDescription= "";
				string ssBillingCode= "";
				string ssCustom1= "";
				string ssCustom2= "";
				string ssCustom3= "";

				if (Request.QueryString["msisdn"] != null) {
					ssMSISDN = Request.QueryString["msisdn"];
				}
				if (Request.QueryString["la"] != null) {
					ssLargeAccount = Request.QueryString["la"];
				}
				if (Request.QueryString["customid"] != null) {
					ssCustomId = System.Convert.ToInt32(Request.QueryString["customid"]);
				}
				if (Request.QueryString["screen"] != null) {
					ssScreen = Request.QueryString["screen"];
				}
				if (Request.QueryString["msgid"] != null) {
					ssMessageId = Request.QueryString["msgid"];
				}
				if (Request.QueryString["res"] != null) {
					ssResult = Request.QueryString["res"];
				}
				if (Request.QueryString["rescode"] != null) {
					ssResultCode = System.Convert.ToInt32(Request.QueryString["rescode"]);
				}
				if (Request.QueryString["exerrcode"] != null) {
					ssExtendedErrorCode = Request.QueryString["exerrcode"];
				}
				if (Request.QueryString["conn"] != null) {
					ssConnection = Request.QueryString["conn"];
				}
				if (Request.QueryString["opcode"] != null) {
					ssOperatorCode = Request.QueryString["opcode"];
				}
				if (Request.QueryString["billdesc"] != null) {
					ssBillingDescription = Request.QueryString["billdesc"];
				}
				if (Request.QueryString["billcode"] != null) {
					ssBillingCode = Request.QueryString["billcode"];
				}
				if (Request.QueryString["custom1"] != null) {
					ssCustom1 = Request.QueryString["custom1"];
				}
				if (Request.QueryString["custom2"] != null) {
					ssCustom2 = Request.QueryString["custom2"];
				}
				if (Request.QueryString["custom3"] != null) {
					ssCustom3 = Request.QueryString["custom3"];
				}


				ok = true;
			} catch (Exception exc) {
				ErrorLog.LogApplicationError(exc, heContext, "DeliveryHandler");
			} finally {
				DatabaseAccess.FreeupResources(ok);
			}
			Response.End();
		}

		#region Web Form Designer generated code
		override protected void OnInit(EventArgs e) {
			// 
			// CODEGEN: This call is required by the ASP.NET Web Form Designer.
			// 
			InitializeComponent();
			base.OnInit(e);
		}

		/// <summary>
		/// Required method for Designer support - do not modify
		/// the contents of this method with the code editor.
		/// </summary>
		private void InitializeComponent() {
			this.Load += new System.EventHandler(this.Page_Load);
		}
		#endregion

	}
}
